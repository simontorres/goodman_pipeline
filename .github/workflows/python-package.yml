# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Goodman Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:

          - name: Python 3.12
            os: ubuntu-latest
            python: '3.12'
            toxenv: py312-test

          - name: Python 3.10
            os: ubuntu-latest
            python: '3.10'
            toxenv: py310-test

          - name: Python 3.9
            os: ubuntu-latest
            python: 3.9
            toxenv: py39-test

          - name: Python 3.8
            os: ubuntu-latest
            python: 3.8
            toxenv: py38-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade tox
        pip install flake8 pytest-cov wheel tox
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Compile DCR Binaries
      run: |
        SOURCE_DIR=${{ github.workspace }}/goodman_pipeline/data/dcr_source/dcr
        make --directory $SOURCE_DIR
        chmod +x $SOURCE_DIR/dcr
        echo "${{ github.workspace }}/goodman_pipeline/data/dcr_source/dcr" >> $GITHUB_PATH
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run Tests
      run: |
        tox ${{ matrix.toxargs }} -e ${{ matrix.toxenv }} -- ${{ matrix.toxposargs }}

    - uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        fail_ci_if_error: true # optional (default = false)


